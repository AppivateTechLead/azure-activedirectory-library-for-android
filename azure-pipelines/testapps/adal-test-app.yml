# 'Allow scripts to access the OAuth token' was selected in pipeline.  Add the following YAML to any steps requiring access:
#       env:
#           MY_ACCESS_TOKEN: $(System.AccessToken)
# Variable 'adal_version' was defined in the Variables tab
# Variable 'android:serverUrl' was defined in the Variables tab
# Variable 'common_version' was defined in the Variables tab
# Variable 'ENV_VSTS_MVN_ANDROIDADAL_USERNAME' was defined in the Variables tab
# Variable 'mvnAccessToken' was defined in the Variables tab
# Variable 'test_repo_branch' was defined in the Variables tab
# Variable 'test_repo_dir' was defined in the Variables tab
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: dev
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
jobs:
- job: Phase_1
  displayName: Phase 1
  cancelTimeoutInMinutes: 1
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    persistCredentials: True
  - template: azure-pipelines/templates/steps/credscan-policheck.yml@common
    parameters:
      policheckCmdLineArgsDir: adal
  - task: CmdLine@1
    displayName: Set MVN Access Token in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN]$(mvnAccessToken)'
  # Automation cert disabled
  #- template: azure-pipelines/templates/steps/automation-cert.yml@common
  #  parameters:
  #    envVstsMvnAt: ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN
  - task: PowerShell@2
    displayName: Generate Assemble Task for ADAL Test App
    inputs:
      targetType: inline
      script: >-
        $assembleTask = "assembleDistRelease"


        if (("$(adal_version)" -ne "")) {
            $assembleTask = $assembleTask + " -PdistAdalVersion=" + "$(adal_version)"
        }


        if (("$(common_version)" -ne "")) {
            $assembleTask = $assembleTask + " -PdistCommonVersion=" + "$(common_version)"
        }


        Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble ADAL Test App
    inputs:
      tasks: userappwithbroker:clean userappwithbroker:$(assembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: PublishPipelineArtifact@1
    displayName: Publish ADAL Test App APK
    inputs:
      PathtoPublish: c:/temp/adal/userappwithbroker/outputs/apk/dist/release/userappwithbroker-dist-release.apk
      ArtifactName: AdalTestAppDistRelease
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Detection
...
