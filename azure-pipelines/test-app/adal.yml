# File: azure-pipelines\test-app\adal.yml
# Description: Generate ADAL test app APK
# use <project>_branch variables to build the Local version
# use dist_<project>_version variables to build the Dist version
# Variable '[adal, common]_branch' was defined in the Variables tab
# Variable 'dist_[adal, common]_version' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN' was defined in the Variables tab
# Variable: 'mvnAccessToken' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
name: $(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - Dist
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

resources:
  repositories:
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: pedroro/pipes
    endpoint: ANDROID_GITHUB

jobs:
- job: adal_test_app
  displayName: Build ADAL Test App ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} APK
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    submodules: true
  - template: azure-pipelines/templates/steps/automation-cert.yml@common
    parameters:
      envVstsMvnAt: ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN
  - ${{ if eq(parameters.productFlavors, 'Dist') }}:
    - task: PowerShell@2
      displayName: Generate Assemble Dist Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleDist${{ parameters.signingConfigurations }}"
          if (("$(dist_common_version)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistCommonVersion=" + "$(dist_common_version)"
          }
          if (("$(dist_adal_version)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistAdalVersion=" + "$(dist_adal_version)"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }}"
      displayName: Generate Assemble Local Task
    - script: |
        cd common
        git checkout ${{ variables.local_common_branch }}
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN]$(mvnAccessToken)'
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble adalTestApp
    inputs:
      tasks: userappwithbroker:clean userappwithbroker:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: PublishPipelineArtifact@1
    displayName: Publish Adal Host APK
    inputs:
      targetPath: userappwithbroker/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: adalTestApp
      patterns: '**/*.apk'
...
